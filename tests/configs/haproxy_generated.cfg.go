// Code generated by go generate; DO NOT EDIT.
/*
Copyright 2019 HAProxy Technologies

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package configs

const generatedConfig = `# _version=1
# HAProxy Technologies
# https://www.haproxy.com/
# sections are in alphabetical order (except global & default) for code generation

global test
  cpu-map 1-4 0-3
  cpu-map 1/all 0-3
  cpu-map auto:1-4 0-3
  cpu-map auto:1-4 0-1 2-3
  lua-load /etc/haproxy/lua/foo.lua
  ssl-engine rdrand
  ssl-mode-async

defaults test
  balance roundrobin
  cookie test
  default-server inter 1000 weight 13
  default-server fall 1 rise 2 inter 3s port 4444
  errorfile 400 /etc/haproxy/errorfiles/400badreq.http
  errorfile 408 /dev/null # work around Chrome pre-connect bug
  errorfile 403 /etc/haproxy/errorfiles/403forbid.http
  errorfile 503 /etc/haproxy/errorfiles/503sorry.http
  hash-type map-based
  http-reuse never
  log global
  log stdout format short daemon # send log to systemd
  log stdout format raw daemon # send everything to stdout
  log stderr format raw daemon notice # send important events to stderr
  log 127.0.0.1:514 local0 notice # only send important events
  log 127.0.0.1:514 local0 notice notice # same but limit output level
  log 127.0.0.1:1515 len 8192 format rfc5424 local2 info
  option httpchk OPTIONS * HTTP/1.1\\r\\nHost:\\ www
  unique-id-format %{+X}o_%ci:%cp_%fi:%fp_%Ts_%rt:%pid
  unique-id-header X-Unique-ID
  http-check comment testcomment
  http-check connect
  http-check connect default
  http-check connect port 8080
  http-check connect addr 8.8.8.8
  http-check connect send-proxy
  http-check connect via-socks4
  http-check connect ssl
  http-check connect sni haproxy.1wt.eu
  http-check connect alpn h2,http/1.1
  http-check connect proto h2
  http-check connect linger
  http-check connect comment testcomment
  http-check connect port 443 addr 8.8.8.8 send-proxy via-socks4 ssl sni haproxy.1wt.eu alpn h2,http/1.1 linger proto h2 comment testcomment
  http-check disable-on-404
  http-check expect status 200
  http-check expect min-recv 50 status 200
  http-check expect comment testcomment status 200
  http-check expect ok-status L7OK status 200
  http-check expect error-status L7RSP status 200
  http-check expect tout-status L7TOUT status 200
  http-check expect on-success \"my-log-format\" status 200
  http-check expect on-error \"my-log-format\" status 200
  http-check expect status-code \"500\" status 200
  http-check expect ! string SQL\\ Error
  http-check expect ! rstatus ^5
  http-check expect rstring <!--tag:[0-9a-f]*--></html>
  http-check send meth GET
  http-check send uri /health
  http-check send ver \"HTTP/1.1\"
  http-check send comment testcomment
  http-check send meth GET uri /health ver \"HTTP/1.1\" hdr Host example.com hdr Accept-Encoding gzip body '{\"key\":\"value\"}'
  http-check send uri-lf my-log-format body-lf 'my-log-format'
  http-check send-state
  stats admin if LOCALHOST
  stats auth admin1:AdMiN123
  stats enable
  stats hide-version
  stats show-legends
  stats maxconn 10
  stats realm HAProxy\\ Statistics
  stats refresh 10s
  stats scope .
  stats show-desc Master node for Europe, Asia, Africa
  stats show-node
  stats show-node Europe-1
  stats uri /admin?stats
  stats bind-process all
  stats bind-process odd
  stats bind-process even
  stats bind-process 1 2 3 4
  stats bind-process 1-4
  stats http-request realm HAProxy\\ Statistics
  stats http-request realm HAProxy\\ Statistics if something
  stats http-request auth if something
  stats http-request deny unless something
  stats http-request allow

backend test
  acl url_stats path_beg /stats
  acl url_static path_beg -i /static /images /javascript /stylesheets
  acl url_static path_end -i .jpg .gif .png .css .js
  acl be_app_ok nbsrv(be_app) gt 0
  acl be_static_ok nbsrv(be_static) gt 0
  acl key req.hdr(X-Add-ACL-Key) -m found
  acl add path /addacl
  acl del path /delacl
  acl myhost hdr(Host) -f myhost.lst
  acl clear dst_port 80
  acl secure dst_port 8080
  acl login_page url_beg /login
  acl logout url_beg /logout
  acl uid_given url_reg /login?userid=[^&]+
  acl cookie_set hdr_sub(cookie) SEEN=1
  balance roundrobin
  cookie test
  default-server inter 1000 weight 13
  default-server fall 1 rise 2 inter 3s port 4444
  errorfile 400 /etc/haproxy/errorfiles/400badreq.http
  errorfile 408 /dev/null # work around Chrome pre-connect bug
  errorfile 403 /etc/haproxy/errorfiles/403forbid.http
  errorfile 503 /etc/haproxy/errorfiles/503sorry.http
  hash-type map-based
  http-reuse never
  log global
  log stdout format short daemon # send log to systemd
  log stdout format raw daemon # send everything to stdout
  log stderr format raw daemon notice # send important events to stderr
  log 127.0.0.1:514 local0 notice # only send important events
  log 127.0.0.1:514 local0 notice notice # same but limit output level
  log 127.0.0.1:1515 len 8192 format rfc5424 local2 info
  option forwardfor
  option httpchk OPTIONS * HTTP/1.1\\r\\nHost:\\ www
  option mysql-check
  option pgsql-check
  option redispatch
  option smtpchk
  external-check path /usr/bin:/bin
  external-check command /bin/true
  server name 127.0.0.1:8080
  server name 127.0.0.1
  server name 127.0.0.1 backup
  stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s)
  stats socket 127.0.0.1:8080
  stats socket 127.0.0.1:8080 mode admin
  stats socket /some/path/to/socket
  stats socket /some/path/to/socket mode admin
  stick on src table pop if !localhost
  stick match src table pop if !localhost
  stick store-request src table pop if !localhost
  use-server www if { req_ssl_sni -i www.example.com }
  use-server www if { req_ssl_sni -i www.example.com } # comment
  http-request capture req.cook_cnt(FirstVisit),bool len 10
  http-request deny deny_status 0 unless { src 127.0.0.1 }
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)] if value
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)]
  http-request add-acl(map.lst) [src]
  http-request add-header X-value value
  http-request cache-use cache-name
  http-request cache-use cache-name if FALSE
  http-request del-acl(map.lst) [src]
  http-request allow
  http-request auth
  http-request del-header X-value
  http-request del-map(map.lst) %[src] if ! value
  http-request del-map(map.lst) %[src]
  http-request deny
  http-request disable-l7-retry
  http-request disable-l7-retry if FALSE
  http-request early-hint hint %[src]
  http-request early-hint hint %[src] if FALSE
  http-request early-hint if FALSE
  http-request lua.foo
  http-request lua.foo if FALSE
  http-request lua.foo param
  http-request lua.foo param param2
  http-request redirect prefix https://mysite.com
  http-request reject
  http-request replace-header User-agent curl foo
  http-request replace-path (.*) /foo
  http-request replace-uri ^http://(.*) https://1
  http-request replace-uri ^http://(.*) https://1 if FALSE
  http-request replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
  http-request sc-inc-gpc0(1)
  http-request sc-inc-gpc0(1) if FALSE
  http-request sc-inc-gpc1(1)
  http-request sc-inc-gpc1(1) if FALSE
  http-request sc-set-gpt0(1) hdr(Host),lower
  http-request sc-set-gpt0(1) 10
  http-request sc-set-gpt0(1) hdr(Host),lower if FALSE
  http-request send-spoe-group engine group
  http-request set-header X-value value
  http-request set-log-level silent
  http-request set-mark 20
  http-request set-mark 0x1Ab
  http-request set-nice 0
  http-request set-nice 0 if FALSE
  http-request set-method POST
  http-request set-method POST if FALSE
  http-request set-path /%[hdr(host)]%[path]
  http-request set-priority-class req.hdr(priority)
  http-request set-priority-class req.hdr(priority) if FALSE
  http-request set-priority-offset req.hdr(offset)
  http-request set-priority-offset req.hdr(offset) if FALSE
  http-request set-query %[query,regsub(%3D,=,g)]
  http-request set-src hdr(src)
  http-request set-src hdr(src) if FALSE
  http-request set-src-port hdr(port)
  http-request set-src-port hdr(port) if FALSE
  http-request set-tos 0 if FALSE
  http-request set-tos 0
  http-request set-uri /%[hdr(host)]%[path]
  http-request set-var(req.my_var) req.fhdr(user-agent),lower
  http-request silent-drop
  http-request silent-drop if FALSE
  http-request strict-mode on
  http-request strict-mode on if FALSE
  http-request tarpit
  http-request track-sc0 src
  http-request track-sc1 src
  http-request track-sc2 src
  http-request unset-var(req.my_var)
  http-request unset-var(req.my_var) if FALSE
  http-request wait-for-handshake
  http-request wait-for-handshake if FALSE
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower if { var(txn.myip) -m found }
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower unless { var(txn.myip) -m found }
  http-request do-resolve(txn.myip,mydns,ipv4) hdr(Host),lower
  http-request do-resolve(txn.myip,mydns,ipv6) hdr(Host),lower
  http-request set-dst var(txn.myip)
  http-request set-dst var(txn.myip) if { var(txn.myip) -m found }
  http-request set-dst var(txn.myip) unless { var(txn.myip) -m found }
  http-request set-dst-port hdr(x-port)
  http-request set-dst-port hdr(x-port) if { var(txn.myip) -m found }
  http-request set-dst-port hdr(x-port) unless { var(txn.myip) -m found }
  http-request set-dst-port int(4000)
  http-response capture res.hdr(Server) id 0
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
  http-response add-acl(map.lst) [src]
  http-response add-header X-value value
  http-response del-acl(map.lst) [src]
  http-response allow
  http-response del-header X-value
  http-response del-map(map.lst) %[src] if ! value
  http-response del-map(map.lst) %[src]
  http-response deny
  http-response lua.foo
  http-response lua.foo if FALSE
  http-response lua.foo param
  http-response lua.foo param param2
  http-response redirect prefix https://mysite.com
  http-response replace-header User-agent curl foo
  http-response replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
  http-response sc-inc-gpc0(1)
  http-response sc-inc-gpc0(1) if FALSE
  http-response sc-inc-gpc1(1)
  http-response sc-inc-gpc1(1) if FALSE
  http-response sc-set-gpt0(1) hdr(Host),lower
  http-response sc-set-gpt0(1) 10
  http-response sc-set-gpt0(1) hdr(Host),lower if FALSE
  http-response send-spoe-group engine group
  http-response set-header X-value value
  http-response set-log-level silent
  http-response set-mark 20
  http-response set-mark 0x1Ab
  http-response set-nice 0
  http-response set-nice 0 if FALSE
  http-response set-status 503
  http-response set-tos 0 if FALSE
  http-response set-tos 0
  http-response set-var(req.my_var) res.fhdr(user-agent),lower
  http-response silent-drop
  http-response silent-drop if FALSE
  http-response unset-var(req.my_var)
  http-response unset-var(req.my_var) if FALSE
  http-response track-sc0 src if FALSE
  http-response track-sc0 src table tr if FALSE
  http-response track-sc0 src
  http-response track-sc1 src if FALSE
  http-response track-sc1 src table tr if FALSE
  http-response track-sc1 src
  http-response track-sc2 src if FALSE
  http-response track-sc2 src table tr if FALSE
  http-response track-sc2 src
  http-response strict-mode on
  http-response strict-mode on if FALSE
  http-check comment testcomment
  http-check connect
  http-check connect default
  http-check connect port 8080
  http-check connect addr 8.8.8.8
  http-check connect send-proxy
  http-check connect via-socks4
  http-check connect ssl
  http-check connect sni haproxy.1wt.eu
  http-check connect alpn h2,http/1.1
  http-check connect proto h2
  http-check connect linger
  http-check connect comment testcomment
  http-check connect port 443 addr 8.8.8.8 send-proxy via-socks4 ssl sni haproxy.1wt.eu alpn h2,http/1.1 linger proto h2 comment testcomment
  http-check disable-on-404
  http-check expect status 200
  http-check expect min-recv 50 status 200
  http-check expect comment testcomment status 200
  http-check expect ok-status L7OK status 200
  http-check expect error-status L7RSP status 200
  http-check expect tout-status L7TOUT status 200
  http-check expect on-success \"my-log-format\" status 200
  http-check expect on-error \"my-log-format\" status 200
  http-check expect status-code \"500\" status 200
  http-check expect ! string SQL\\ Error
  http-check expect ! rstatus ^5
  http-check expect rstring <!--tag:[0-9a-f]*--></html>
  http-check send meth GET
  http-check send uri /health
  http-check send ver \"HTTP/1.1\"
  http-check send comment testcomment
  http-check send meth GET uri /health ver \"HTTP/1.1\" hdr Host example.com hdr Accept-Encoding gzip body '{\"key\":\"value\"}'
  http-check send uri-lf my-log-format body-lf 'my-log-format'
  http-check send-state
  tcp-request content accept
  tcp-request content accept if !HTTP
  tcp-request content reject
  tcp-request content reject if !HTTP
  tcp-request content capture req.payload(0,6) len 6
  tcp-request content capture req.payload(0,6) len 6 if !HTTP
  tcp-request content set-priority-class int(1)
  tcp-request content set-priority-class int(1) if some_check
  tcp-request content set-priority-offset int(10)
  tcp-request content set-priority-offset int(10) if some_check
  tcp-request content track-sc0 src
  tcp-request content track-sc0 src if some_check
  tcp-request content track-sc1 src
  tcp-request content track-sc1 src if some_check
  tcp-request content track-sc2 src
  tcp-request content track-sc2 src if some_check
  tcp-request content track-sc0 src table foo
  tcp-request content track-sc0 src table foo if some_check
  tcp-request content track-sc1 src table foo
  tcp-request content track-sc1 src table foo if some_check
  tcp-request content track-sc2 src table foo
  tcp-request content track-sc2 src table foo if some_check
  tcp-request content set-dst ipv4(10.0.0.1)
  tcp-request content set-var(sess.src) src
  tcp-request content set-var(sess.dn) ssl_c_s_dn
  tcp-request content unset-var(sess.src)
  tcp-request content unset-var(sess.dn)
  tcp-request content silent-drop
  tcp-request content silent-drop if !HTTP
  tcp-request content send-spoe-group engine group
  tcp-request content use-service lua.deny
  tcp-request content use-service lua.deny if !HTTP
  tcp-request content lua.foo
  tcp-request content lua.foo param if !HTTP
  tcp-request content lua.foo param param1
  tcp-request connection accept
  tcp-request connection accept if !HTTP
  tcp-request connection reject
  tcp-request connection reject if !HTTP
  tcp-request connection expect-proxy layer4 if { src -f proxies.lst }
  tcp-request connection expect-netscaler-cip layer4
  tcp-request connection capture req.payload(0,6) len 6
  tcp-request connection track-sc0 src
  tcp-request connection track-sc0 src if some_check
  tcp-request connection track-sc1 src
  tcp-request connection track-sc1 src if some_check
  tcp-request connection track-sc2 src
  tcp-request connection track-sc2 src if some_check
  tcp-request connection track-sc0 src table foo
  tcp-request connection track-sc0 src table foo if some_check
  tcp-request connection track-sc1 src table foo
  tcp-request connection track-sc1 src table foo if some_check
  tcp-request connection track-sc2 src table foo
  tcp-request connection track-sc2 src table foo if some_check
  tcp-request connection sc-inc-gpc0(2)
  tcp-request connection sc-inc-gpc0(2) if is-error
  tcp-request connection sc-inc-gpc1(2)
  tcp-request connection sc-inc-gpc1(2) if is-error
  tcp-request connection sc-set-gpt0(0) 1337
  tcp-request connection sc-set-gpt0(0) 1337 if exceeds_limit
  tcp-request connection set-src src,ipmask(24)
  tcp-request connection set-src src,ipmask(24) if some_check
  tcp-request connection set-src hdr(x-forwarded-for)
  tcp-request connection set-src hdr(x-forwarded-for) if some_check
  tcp-request connection lua.foo
  tcp-request connection lua.foo param if !HTTP
  tcp-request connection lua.foo param param1
  tcp-request session accept
  tcp-request session accept if !HTTP
  tcp-request session reject
  tcp-request session reject if !HTTP
  tcp-request session track-sc0 src
  tcp-request session track-sc0 src if some_check
  tcp-request session track-sc1 src
  tcp-request session track-sc1 src if some_check
  tcp-request session track-sc2 src
  tcp-request session track-sc2 src if some_check
  tcp-request session track-sc0 src table foo
  tcp-request session track-sc0 src table foo if some_check
  tcp-request session track-sc1 src table foo
  tcp-request session track-sc1 src table foo if some_check
  tcp-request session track-sc2 src table foo
  tcp-request session track-sc2 src table foo if some_check
  tcp-request session sc-inc-gpc0(2)
  tcp-request session sc-inc-gpc0(2) if is-error
  tcp-request session sc-inc-gpc1(2)
  tcp-request session sc-inc-gpc1(2) if is-error
  tcp-request session sc-set-gpt0(0) 1337
  tcp-request session sc-set-gpt0(0) 1337 if exceeds_limit
  tcp-request session set-var(sess.src) src
  tcp-request session set-var(sess.dn) ssl_c_s_dn
  tcp-request session unset-var(sess.src)
  tcp-request session unset-var(sess.dn)
  tcp-request session silent-drop
  tcp-request session silent-drop if !HTTP
  tcp-response content lua.foo
  tcp-response content lua.foo param if !HTTP
  tcp-response content lua.foo param param1
  redirect prefix http://www.bar.com code 301 if { hdr(host) -i foo.com }
  stats admin if LOCALHOST
  stats auth admin1:AdMiN123
  stats enable
  stats hide-version
  stats show-legends
  stats maxconn 10
  stats realm HAProxy\\ Statistics
  stats refresh 10s
  stats scope .
  stats show-desc Master node for Europe, Asia, Africa
  stats show-node
  stats show-node Europe-1
  stats uri /admin?stats
  stats bind-process all
  stats bind-process odd
  stats bind-process even
  stats bind-process 1 2 3 4
  stats bind-process 1-4
  stats http-request realm HAProxy\\ Statistics
  stats http-request realm HAProxy\\ Statistics if something
  stats http-request auth if something
  stats http-request deny unless something
  stats http-request allow

frontend test
  acl url_stats path_beg /stats
  acl url_static path_beg -i /static /images /javascript /stylesheets
  acl url_static path_end -i .jpg .gif .png .css .js
  acl be_app_ok nbsrv(be_app) gt 0
  acl be_static_ok nbsrv(be_static) gt 0
  acl key req.hdr(X-Add-ACL-Key) -m found
  acl add path /addacl
  acl del path /delacl
  acl myhost hdr(Host) -f myhost.lst
  acl clear dst_port 80
  acl secure dst_port 8080
  acl login_page url_beg /login
  acl logout url_beg /logout
  acl uid_given url_reg /login?userid=[^&]+
  acl cookie_set hdr_sub(cookie) SEEN=1
  bind :80,:443
  bind 10.0.0.1:10080,10.0.0.1:10443
  bind /var/run/ssl-frontend.sock user root mode 600 accept-proxy
  bind :80
  bind :443 ssl crt /etc/haproxy/site.pem
  bind :443 ssl crt /etc/haproxy/site.pem alpn h2,http/1.1
  bind :::443 v4v6 ssl crt /etc/haproxy/site.pem alpn h2,http/1.1
  bind ipv6@:80
  bind ipv4@public_ssl:443 ssl crt /etc/haproxy/site.pem
  bind unix@ssl-frontend.sock user root mode 600 accept-proxy
  bind-process all
  errorfile 400 /etc/haproxy/errorfiles/400badreq.http
  errorfile 408 /dev/null # work around Chrome pre-connect bug
  errorfile 403 /etc/haproxy/errorfiles/403forbid.http
  errorfile 503 /etc/haproxy/errorfiles/503sorry.http
  log global
  log stdout format short daemon # send log to systemd
  log stdout format raw daemon # send everything to stdout
  log stderr format raw daemon notice # send important events to stderr
  log 127.0.0.1:514 local0 notice # only send important events
  log 127.0.0.1:514 local0 notice notice # same but limit output level
  log 127.0.0.1:1515 len 8192 format rfc5424 local2 info
  option forwardfor
  option httplog
  stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s)
  use_backend test if TRUE
  use_backend test if TRUE # deny
  use_backend test # deny
  unique-id-format %{+X}o_%ci:%cp_%fi:%fp_%Ts_%rt:%pid
  unique-id-header X-Unique-ID
  http-request capture req.cook_cnt(FirstVisit),bool len 10
  http-request deny deny_status 0 unless { src 127.0.0.1 }
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)] if value
  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)]
  http-request add-acl(map.lst) [src]
  http-request add-header X-value value
  http-request cache-use cache-name
  http-request cache-use cache-name if FALSE
  http-request del-acl(map.lst) [src]
  http-request allow
  http-request auth
  http-request del-header X-value
  http-request del-map(map.lst) %[src] if ! value
  http-request del-map(map.lst) %[src]
  http-request deny
  http-request disable-l7-retry
  http-request disable-l7-retry if FALSE
  http-request early-hint hint %[src]
  http-request early-hint hint %[src] if FALSE
  http-request early-hint if FALSE
  http-request lua.foo
  http-request lua.foo if FALSE
  http-request lua.foo param
  http-request lua.foo param param2
  http-request redirect prefix https://mysite.com
  http-request reject
  http-request replace-header User-agent curl foo
  http-request replace-path (.*) /foo
  http-request replace-uri ^http://(.*) https://1
  http-request replace-uri ^http://(.*) https://1 if FALSE
  http-request replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
  http-request sc-inc-gpc0(1)
  http-request sc-inc-gpc0(1) if FALSE
  http-request sc-inc-gpc1(1)
  http-request sc-inc-gpc1(1) if FALSE
  http-request sc-set-gpt0(1) hdr(Host),lower
  http-request sc-set-gpt0(1) 10
  http-request sc-set-gpt0(1) hdr(Host),lower if FALSE
  http-request send-spoe-group engine group
  http-request set-header X-value value
  http-request set-log-level silent
  http-request set-mark 20
  http-request set-mark 0x1Ab
  http-request set-nice 0
  http-request set-nice 0 if FALSE
  http-request set-method POST
  http-request set-method POST if FALSE
  http-request set-path /%[hdr(host)]%[path]
  http-request set-priority-class req.hdr(priority)
  http-request set-priority-class req.hdr(priority) if FALSE
  http-request set-priority-offset req.hdr(offset)
  http-request set-priority-offset req.hdr(offset) if FALSE
  http-request set-query %[query,regsub(%3D,=,g)]
  http-request set-src hdr(src)
  http-request set-src hdr(src) if FALSE
  http-request set-src-port hdr(port)
  http-request set-src-port hdr(port) if FALSE
  http-request set-tos 0 if FALSE
  http-request set-tos 0
  http-request set-uri /%[hdr(host)]%[path]
  http-request set-var(req.my_var) req.fhdr(user-agent),lower
  http-request silent-drop
  http-request silent-drop if FALSE
  http-request strict-mode on
  http-request strict-mode on if FALSE
  http-request tarpit
  http-request track-sc0 src
  http-request track-sc1 src
  http-request track-sc2 src
  http-request unset-var(req.my_var)
  http-request unset-var(req.my_var) if FALSE
  http-request wait-for-handshake
  http-request wait-for-handshake if FALSE
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower if { var(txn.myip) -m found }
  http-request do-resolve(txn.myip,mydns) hdr(Host),lower unless { var(txn.myip) -m found }
  http-request do-resolve(txn.myip,mydns,ipv4) hdr(Host),lower
  http-request do-resolve(txn.myip,mydns,ipv6) hdr(Host),lower
  http-request set-dst var(txn.myip)
  http-request set-dst var(txn.myip) if { var(txn.myip) -m found }
  http-request set-dst var(txn.myip) unless { var(txn.myip) -m found }
  http-request set-dst-port hdr(x-port)
  http-request set-dst-port hdr(x-port) if { var(txn.myip) -m found }
  http-request set-dst-port hdr(x-port) unless { var(txn.myip) -m found }
  http-request set-dst-port int(4000)
  http-response capture res.hdr(Server) id 0
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
  http-response add-acl(map.lst) [src]
  http-response add-header X-value value
  http-response del-acl(map.lst) [src]
  http-response allow
  http-response del-header X-value
  http-response del-map(map.lst) %[src] if ! value
  http-response del-map(map.lst) %[src]
  http-response deny
  http-response lua.foo
  http-response lua.foo if FALSE
  http-response lua.foo param
  http-response lua.foo param param2
  http-response redirect prefix https://mysite.com
  http-response replace-header User-agent curl foo
  http-response replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
  http-response sc-inc-gpc0(1)
  http-response sc-inc-gpc0(1) if FALSE
  http-response sc-inc-gpc1(1)
  http-response sc-inc-gpc1(1) if FALSE
  http-response sc-set-gpt0(1) hdr(Host),lower
  http-response sc-set-gpt0(1) 10
  http-response sc-set-gpt0(1) hdr(Host),lower if FALSE
  http-response send-spoe-group engine group
  http-response set-header X-value value
  http-response set-log-level silent
  http-response set-mark 20
  http-response set-mark 0x1Ab
  http-response set-nice 0
  http-response set-nice 0 if FALSE
  http-response set-status 503
  http-response set-tos 0 if FALSE
  http-response set-tos 0
  http-response set-var(req.my_var) res.fhdr(user-agent),lower
  http-response silent-drop
  http-response silent-drop if FALSE
  http-response unset-var(req.my_var)
  http-response unset-var(req.my_var) if FALSE
  http-response track-sc0 src if FALSE
  http-response track-sc0 src table tr if FALSE
  http-response track-sc0 src
  http-response track-sc1 src if FALSE
  http-response track-sc1 src table tr if FALSE
  http-response track-sc1 src
  http-response track-sc2 src if FALSE
  http-response track-sc2 src table tr if FALSE
  http-response track-sc2 src
  http-response strict-mode on
  http-response strict-mode on if FALSE
  tcp-request content accept
  tcp-request content accept if !HTTP
  tcp-request content reject
  tcp-request content reject if !HTTP
  tcp-request content capture req.payload(0,6) len 6
  tcp-request content capture req.payload(0,6) len 6 if !HTTP
  tcp-request content set-priority-class int(1)
  tcp-request content set-priority-class int(1) if some_check
  tcp-request content set-priority-offset int(10)
  tcp-request content set-priority-offset int(10) if some_check
  tcp-request content track-sc0 src
  tcp-request content track-sc0 src if some_check
  tcp-request content track-sc1 src
  tcp-request content track-sc1 src if some_check
  tcp-request content track-sc2 src
  tcp-request content track-sc2 src if some_check
  tcp-request content track-sc0 src table foo
  tcp-request content track-sc0 src table foo if some_check
  tcp-request content track-sc1 src table foo
  tcp-request content track-sc1 src table foo if some_check
  tcp-request content track-sc2 src table foo
  tcp-request content track-sc2 src table foo if some_check
  tcp-request content set-dst ipv4(10.0.0.1)
  tcp-request content set-var(sess.src) src
  tcp-request content set-var(sess.dn) ssl_c_s_dn
  tcp-request content unset-var(sess.src)
  tcp-request content unset-var(sess.dn)
  tcp-request content silent-drop
  tcp-request content silent-drop if !HTTP
  tcp-request content send-spoe-group engine group
  tcp-request content use-service lua.deny
  tcp-request content use-service lua.deny if !HTTP
  tcp-request content lua.foo
  tcp-request content lua.foo param if !HTTP
  tcp-request content lua.foo param param1
  tcp-request connection accept
  tcp-request connection accept if !HTTP
  tcp-request connection reject
  tcp-request connection reject if !HTTP
  tcp-request connection expect-proxy layer4 if { src -f proxies.lst }
  tcp-request connection expect-netscaler-cip layer4
  tcp-request connection capture req.payload(0,6) len 6
  tcp-request connection track-sc0 src
  tcp-request connection track-sc0 src if some_check
  tcp-request connection track-sc1 src
  tcp-request connection track-sc1 src if some_check
  tcp-request connection track-sc2 src
  tcp-request connection track-sc2 src if some_check
  tcp-request connection track-sc0 src table foo
  tcp-request connection track-sc0 src table foo if some_check
  tcp-request connection track-sc1 src table foo
  tcp-request connection track-sc1 src table foo if some_check
  tcp-request connection track-sc2 src table foo
  tcp-request connection track-sc2 src table foo if some_check
  tcp-request connection sc-inc-gpc0(2)
  tcp-request connection sc-inc-gpc0(2) if is-error
  tcp-request connection sc-inc-gpc1(2)
  tcp-request connection sc-inc-gpc1(2) if is-error
  tcp-request connection sc-set-gpt0(0) 1337
  tcp-request connection sc-set-gpt0(0) 1337 if exceeds_limit
  tcp-request connection set-src src,ipmask(24)
  tcp-request connection set-src src,ipmask(24) if some_check
  tcp-request connection set-src hdr(x-forwarded-for)
  tcp-request connection set-src hdr(x-forwarded-for) if some_check
  tcp-request connection lua.foo
  tcp-request connection lua.foo param if !HTTP
  tcp-request connection lua.foo param param1
  tcp-request session accept
  tcp-request session accept if !HTTP
  tcp-request session reject
  tcp-request session reject if !HTTP
  tcp-request session track-sc0 src
  tcp-request session track-sc0 src if some_check
  tcp-request session track-sc1 src
  tcp-request session track-sc1 src if some_check
  tcp-request session track-sc2 src
  tcp-request session track-sc2 src if some_check
  tcp-request session track-sc0 src table foo
  tcp-request session track-sc0 src table foo if some_check
  tcp-request session track-sc1 src table foo
  tcp-request session track-sc1 src table foo if some_check
  tcp-request session track-sc2 src table foo
  tcp-request session track-sc2 src table foo if some_check
  tcp-request session sc-inc-gpc0(2)
  tcp-request session sc-inc-gpc0(2) if is-error
  tcp-request session sc-inc-gpc1(2)
  tcp-request session sc-inc-gpc1(2) if is-error
  tcp-request session sc-set-gpt0(0) 1337
  tcp-request session sc-set-gpt0(0) 1337 if exceeds_limit
  tcp-request session set-var(sess.src) src
  tcp-request session set-var(sess.dn) ssl_c_s_dn
  tcp-request session unset-var(sess.src)
  tcp-request session unset-var(sess.dn)
  tcp-request session silent-drop
  tcp-request session silent-drop if !HTTP
  tcp-response content lua.foo
  tcp-response content lua.foo param if !HTTP
  tcp-response content lua.foo param param1
  redirect prefix http://www.bar.com code 301 if { hdr(host) -i foo.com }
  stats admin if LOCALHOST
  stats auth admin1:AdMiN123
  stats enable
  stats hide-version
  stats show-legends
  stats maxconn 10
  stats realm HAProxy\\ Statistics
  stats refresh 10s
  stats scope .
  stats show-desc Master node for Europe, Asia, Africa
  stats show-node
  stats show-node Europe-1
  stats uri /admin?stats
  stats bind-process all
  stats bind-process odd
  stats bind-process even
  stats bind-process 1 2 3 4
  stats bind-process 1-4
  stats http-request realm HAProxy\\ Statistics
  stats http-request realm HAProxy\\ Statistics if something
  stats http-request auth if something
  stats http-request deny unless something
  stats http-request allow

mailers test
  mailer smtp1 192.168.0.1:587
  mailer smtp1 192.168.0.1:587 # just some comment

peers test
  peer name 127.0.0.1:8080

resolvers test
  nameserver dns1 10.0.0.1:53
  nameserver dns1 10.0.0.1:53 # comment

userlists test
  group G1 users tiger,scott
  group G1
  user tiger password $6$k6y3o.eP$JlKBx(...)xHSwRv6J.C0/D7cV91 groups G1
  user panda insecure-password elgato groups G1,G2
  user bear insecure-password hello groups G2
`

var configTests = []configTest{  {`  acl url_stats path_beg /stats
`, 2},
  {`  acl url_static path_beg -i /static /images /javascript /stylesheets
`, 2},
  {`  acl url_static path_end -i .jpg .gif .png .css .js
`, 2},
  {`  acl be_app_ok nbsrv(be_app) gt 0
`, 2},
  {`  acl be_static_ok nbsrv(be_static) gt 0
`, 2},
  {`  acl key req.hdr(X-Add-ACL-Key) -m found
`, 2},
  {`  acl add path /addacl
`, 2},
  {`  acl del path /delacl
`, 2},
  {`  acl myhost hdr(Host) -f myhost.lst
`, 2},
  {`  acl clear dst_port 80
`, 2},
  {`  acl secure dst_port 8080
`, 2},
  {`  acl login_page url_beg /login
`, 2},
  {`  acl logout url_beg /logout
`, 2},
  {`  acl uid_given url_reg /login?userid=[^&]+
`, 2},
  {`  acl cookie_set hdr_sub(cookie) SEEN=1
`, 2},
  {`  bind :80,:443
`, 1},
  {`  bind 10.0.0.1:10080,10.0.0.1:10443
`, 1},
  {`  bind /var/run/ssl-frontend.sock user root mode 600 accept-proxy
`, 1},
  {`  bind :80
`, 1},
  {`  bind :443 ssl crt /etc/haproxy/site.pem
`, 1},
  {`  bind :443 ssl crt /etc/haproxy/site.pem alpn h2,http/1.1
`, 1},
  {`  bind :::443 v4v6 ssl crt /etc/haproxy/site.pem alpn h2,http/1.1
`, 1},
  {`  bind ipv6@:80
`, 1},
  {`  bind ipv4@public_ssl:443 ssl crt /etc/haproxy/site.pem
`, 1},
  {`  bind unix@ssl-frontend.sock user root mode 600 accept-proxy
`, 1},
  {`  bind-process all
`, 1},
  {`  balance roundrobin
`, 2},
  {`  cookie test
`, 2},
  {`  cpu-map 1-4 0-3
`, 1},
  {`  cpu-map 1/all 0-3
`, 1},
  {`  cpu-map auto:1-4 0-3
`, 1},
  {`  cpu-map auto:1-4 0-1 2-3
`, 1},
  {`  default-server inter 1000 weight 13
`, 2},
  {`  default-server fall 1 rise 2 inter 3s port 4444
`, 2},
  {`  errorfile 400 /etc/haproxy/errorfiles/400badreq.http
`, 3},
  {`  errorfile 408 /dev/null # work around Chrome pre-connect bug
`, 3},
  {`  errorfile 403 /etc/haproxy/errorfiles/403forbid.http
`, 3},
  {`  errorfile 503 /etc/haproxy/errorfiles/503sorry.http
`, 3},
  {`  group G1 users tiger,scott
`, 1},
  {`  group G1
`, 1},
  {`  hash-type map-based
`, 2},
  {`  http-reuse never
`, 2},
  {`  log global
`, 3},
  {`  log stdout format short daemon # send log to systemd
`, 3},
  {`  log stdout format raw daemon # send everything to stdout
`, 3},
  {`  log stderr format raw daemon notice # send important events to stderr
`, 3},
  {`  log 127.0.0.1:514 local0 notice # only send important events
`, 3},
  {`  log 127.0.0.1:514 local0 notice notice # same but limit output level
`, 3},
  {`  log 127.0.0.1:1515 len 8192 format rfc5424 local2 info
`, 3},
  {`  mailer smtp1 192.168.0.1:587
`, 1},
  {`  mailer smtp1 192.168.0.1:587 # just some comment
`, 1},
  {`  option forwardfor
`, 2},
  {`  option httpchk OPTIONS * HTTP/1.1\\r\\nHost:\\ www
`, 2},
  {`  option httplog
`, 1},
  {`  option mysql-check
`, 1},
  {`  option pgsql-check
`, 1},
  {`  option redispatch
`, 1},
  {`  option smtpchk
`, 1},
  {`  external-check path /usr/bin:/bin
`, 1},
  {`  external-check command /bin/true
`, 1},
  {`  peer name 127.0.0.1:8080
`, 1},
  {`  server name 127.0.0.1:8080
`, 1},
  {`  server name 127.0.0.1
`, 1},
  {`  server name 127.0.0.1 backup
`, 1},
  {`  stick-table type ip size 1m expire 5m store gpc0,conn_rate(30s)
`, 2},
  {`  stats socket 127.0.0.1:8080
`, 1},
  {`  stats socket 127.0.0.1:8080 mode admin
`, 1},
  {`  stats socket /some/path/to/socket
`, 1},
  {`  stats socket /some/path/to/socket mode admin
`, 1},
  {`  stick on src table pop if !localhost
`, 1},
  {`  stick match src table pop if !localhost
`, 1},
  {`  stick store-request src table pop if !localhost
`, 1},
  {`  nameserver dns1 10.0.0.1:53
`, 1},
  {`  nameserver dns1 10.0.0.1:53 # comment
`, 1},
  {`  use_backend test if TRUE
`, 1},
  {`  use_backend test if TRUE # deny
`, 1},
  {`  use_backend test # deny
`, 1},
  {`  user tiger password $6$k6y3o.eP$JlKBx(...)xHSwRv6J.C0/D7cV91 groups G1
`, 1},
  {`  user panda insecure-password elgato groups G1,G2
`, 1},
  {`  user bear insecure-password hello groups G2
`, 1},
  {`  unique-id-format %{+X}o_%ci:%cp_%fi:%fp_%Ts_%rt:%pid
`, 2},
  {`  unique-id-header X-Unique-ID
`, 2},
  {`  use-server www if { req_ssl_sni -i www.example.com }
`, 1},
  {`  use-server www if { req_ssl_sni -i www.example.com } # comment
`, 1},
  {`  lua-load /etc/haproxy/lua/foo.lua
`, 1},
  {`  ssl-engine rdrand
`, 1},
  {`  ssl-mode-async
`, 1},
  {`  ssl-engine rdrand
`, 1},
  {`  ssl-mode-async
`, 1},
  {`  ssl-engine rdrand
`, 1},
  {`  ssl-mode-async
`, 1},
  {`  http-request capture req.cook_cnt(FirstVisit),bool len 10
`, 2},
  {`  http-request deny deny_status 0 unless { src 127.0.0.1 }
`, 2},
  {`  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)] if value
`, 2},
  {`  http-request set-map(map.lst) %[src] %[req.hdr(X-Value)]
`, 2},
  {`  http-request add-acl(map.lst) [src]
`, 2},
  {`  http-request add-header X-value value
`, 2},
  {`  http-request cache-use cache-name
`, 2},
  {`  http-request cache-use cache-name if FALSE
`, 2},
  {`  http-request del-acl(map.lst) [src]
`, 2},
  {`  http-request allow
`, 2},
  {`  http-request auth
`, 2},
  {`  http-request del-header X-value
`, 2},
  {`  http-request del-map(map.lst) %[src] if ! value
`, 2},
  {`  http-request del-map(map.lst) %[src]
`, 2},
  {`  http-request deny
`, 2},
  {`  http-request disable-l7-retry
`, 2},
  {`  http-request disable-l7-retry if FALSE
`, 2},
  {`  http-request early-hint hint %[src]
`, 2},
  {`  http-request early-hint hint %[src] if FALSE
`, 2},
  {`  http-request early-hint if FALSE
`, 2},
  {`  http-request lua.foo
`, 2},
  {`  http-request lua.foo if FALSE
`, 2},
  {`  http-request lua.foo param
`, 2},
  {`  http-request lua.foo param param2
`, 2},
  {`  http-request redirect prefix https://mysite.com
`, 2},
  {`  http-request reject
`, 2},
  {`  http-request replace-header User-agent curl foo
`, 2},
  {`  http-request replace-path (.*) /foo
`, 2},
  {`  http-request replace-uri ^http://(.*) https://1
`, 2},
  {`  http-request replace-uri ^http://(.*) https://1 if FALSE
`, 2},
  {`  http-request replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`, 2},
  {`  http-request sc-inc-gpc0(1)
`, 2},
  {`  http-request sc-inc-gpc0(1) if FALSE
`, 2},
  {`  http-request sc-inc-gpc1(1)
`, 2},
  {`  http-request sc-inc-gpc1(1) if FALSE
`, 2},
  {`  http-request sc-set-gpt0(1) hdr(Host),lower
`, 2},
  {`  http-request sc-set-gpt0(1) 10
`, 2},
  {`  http-request sc-set-gpt0(1) hdr(Host),lower if FALSE
`, 2},
  {`  http-request send-spoe-group engine group
`, 2},
  {`  http-request set-header X-value value
`, 2},
  {`  http-request set-log-level silent
`, 2},
  {`  http-request set-mark 20
`, 2},
  {`  http-request set-mark 0x1Ab
`, 2},
  {`  http-request set-nice 0
`, 2},
  {`  http-request set-nice 0 if FALSE
`, 2},
  {`  http-request set-method POST
`, 2},
  {`  http-request set-method POST if FALSE
`, 2},
  {`  http-request set-path /%[hdr(host)]%[path]
`, 2},
  {`  http-request set-priority-class req.hdr(priority)
`, 2},
  {`  http-request set-priority-class req.hdr(priority) if FALSE
`, 2},
  {`  http-request set-priority-offset req.hdr(offset)
`, 2},
  {`  http-request set-priority-offset req.hdr(offset) if FALSE
`, 2},
  {`  http-request set-query %[query,regsub(%3D,=,g)]
`, 2},
  {`  http-request set-src hdr(src)
`, 2},
  {`  http-request set-src hdr(src) if FALSE
`, 2},
  {`  http-request set-src-port hdr(port)
`, 2},
  {`  http-request set-src-port hdr(port) if FALSE
`, 2},
  {`  http-request set-tos 0 if FALSE
`, 2},
  {`  http-request set-tos 0
`, 2},
  {`  http-request set-uri /%[hdr(host)]%[path]
`, 2},
  {`  http-request set-var(req.my_var) req.fhdr(user-agent),lower
`, 2},
  {`  http-request silent-drop
`, 2},
  {`  http-request silent-drop if FALSE
`, 2},
  {`  http-request strict-mode on
`, 2},
  {`  http-request strict-mode on if FALSE
`, 2},
  {`  http-request tarpit
`, 2},
  {`  http-request track-sc0 src
`, 2},
  {`  http-request track-sc1 src
`, 2},
  {`  http-request track-sc2 src
`, 2},
  {`  http-request unset-var(req.my_var)
`, 2},
  {`  http-request unset-var(req.my_var) if FALSE
`, 2},
  {`  http-request wait-for-handshake
`, 2},
  {`  http-request wait-for-handshake if FALSE
`, 2},
  {`  http-request do-resolve(txn.myip,mydns) hdr(Host),lower
`, 2},
  {`  http-request do-resolve(txn.myip,mydns) hdr(Host),lower if { var(txn.myip) -m found }
`, 2},
  {`  http-request do-resolve(txn.myip,mydns) hdr(Host),lower unless { var(txn.myip) -m found }
`, 2},
  {`  http-request do-resolve(txn.myip,mydns,ipv4) hdr(Host),lower
`, 2},
  {`  http-request do-resolve(txn.myip,mydns,ipv6) hdr(Host),lower
`, 2},
  {`  http-request set-dst var(txn.myip)
`, 2},
  {`  http-request set-dst var(txn.myip) if { var(txn.myip) -m found }
`, 2},
  {`  http-request set-dst var(txn.myip) unless { var(txn.myip) -m found }
`, 2},
  {`  http-request set-dst-port hdr(x-port)
`, 2},
  {`  http-request set-dst-port hdr(x-port) if { var(txn.myip) -m found }
`, 2},
  {`  http-request set-dst-port hdr(x-port) unless { var(txn.myip) -m found }
`, 2},
  {`  http-request set-dst-port int(4000)
`, 2},
  {`  http-response capture res.hdr(Server) id 0
`, 2},
  {`  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)] if value
`, 2},
  {`  http-response set-map(map.lst) %[src] %[res.hdr(X-Value)]
`, 2},
  {`  http-response add-acl(map.lst) [src]
`, 2},
  {`  http-response add-header X-value value
`, 2},
  {`  http-response del-acl(map.lst) [src]
`, 2},
  {`  http-response allow
`, 2},
  {`  http-response del-header X-value
`, 2},
  {`  http-response del-map(map.lst) %[src] if ! value
`, 2},
  {`  http-response del-map(map.lst) %[src]
`, 2},
  {`  http-response deny
`, 2},
  {`  http-response lua.foo
`, 2},
  {`  http-response lua.foo if FALSE
`, 2},
  {`  http-response lua.foo param
`, 2},
  {`  http-response lua.foo param param2
`, 2},
  {`  http-response redirect prefix https://mysite.com
`, 2},
  {`  http-response replace-header User-agent curl foo
`, 2},
  {`  http-response replace-value X-Forwarded-For ^192.168.(.*)$ 172.16.1
`, 2},
  {`  http-response sc-inc-gpc0(1)
`, 2},
  {`  http-response sc-inc-gpc0(1) if FALSE
`, 2},
  {`  http-response sc-inc-gpc1(1)
`, 2},
  {`  http-response sc-inc-gpc1(1) if FALSE
`, 2},
  {`  http-response sc-set-gpt0(1) hdr(Host),lower
`, 2},
  {`  http-response sc-set-gpt0(1) 10
`, 2},
  {`  http-response sc-set-gpt0(1) hdr(Host),lower if FALSE
`, 2},
  {`  http-response send-spoe-group engine group
`, 2},
  {`  http-response set-header X-value value
`, 2},
  {`  http-response set-log-level silent
`, 2},
  {`  http-response set-mark 20
`, 2},
  {`  http-response set-mark 0x1Ab
`, 2},
  {`  http-response set-nice 0
`, 2},
  {`  http-response set-nice 0 if FALSE
`, 2},
  {`  http-response set-status 503
`, 2},
  {`  http-response set-tos 0 if FALSE
`, 2},
  {`  http-response set-tos 0
`, 2},
  {`  http-response set-var(req.my_var) res.fhdr(user-agent),lower
`, 2},
  {`  http-response silent-drop
`, 2},
  {`  http-response silent-drop if FALSE
`, 2},
  {`  http-response unset-var(req.my_var)
`, 2},
  {`  http-response unset-var(req.my_var) if FALSE
`, 2},
  {`  http-response track-sc0 src if FALSE
`, 2},
  {`  http-response track-sc0 src table tr if FALSE
`, 2},
  {`  http-response track-sc0 src
`, 2},
  {`  http-response track-sc1 src if FALSE
`, 2},
  {`  http-response track-sc1 src table tr if FALSE
`, 2},
  {`  http-response track-sc1 src
`, 2},
  {`  http-response track-sc2 src if FALSE
`, 2},
  {`  http-response track-sc2 src table tr if FALSE
`, 2},
  {`  http-response track-sc2 src
`, 2},
  {`  http-response strict-mode on
`, 2},
  {`  http-response strict-mode on if FALSE
`, 2},
  {`  http-check comment testcomment
`, 2},
  {`  http-check connect
`, 2},
  {`  http-check connect default
`, 2},
  {`  http-check connect port 8080
`, 2},
  {`  http-check connect addr 8.8.8.8
`, 2},
  {`  http-check connect send-proxy
`, 2},
  {`  http-check connect via-socks4
`, 2},
  {`  http-check connect ssl
`, 2},
  {`  http-check connect sni haproxy.1wt.eu
`, 2},
  {`  http-check connect alpn h2,http/1.1
`, 2},
  {`  http-check connect proto h2
`, 2},
  {`  http-check connect linger
`, 2},
  {`  http-check connect comment testcomment
`, 2},
  {`  http-check connect port 443 addr 8.8.8.8 send-proxy via-socks4 ssl sni haproxy.1wt.eu alpn h2,http/1.1 linger proto h2 comment testcomment
`, 2},
  {`  http-check disable-on-404
`, 2},
  {`  http-check expect status 200
`, 2},
  {`  http-check expect min-recv 50 status 200
`, 2},
  {`  http-check expect comment testcomment status 200
`, 2},
  {`  http-check expect ok-status L7OK status 200
`, 2},
  {`  http-check expect error-status L7RSP status 200
`, 2},
  {`  http-check expect tout-status L7TOUT status 200
`, 2},
  {`  http-check expect on-success \"my-log-format\" status 200
`, 2},
  {`  http-check expect on-error \"my-log-format\" status 200
`, 2},
  {`  http-check expect status-code \"500\" status 200
`, 2},
  {`  http-check expect ! string SQL\\ Error
`, 2},
  {`  http-check expect ! rstatus ^5
`, 2},
  {`  http-check expect rstring <!--tag:[0-9a-f]*--></html>
`, 2},
  {`  http-check send meth GET
`, 2},
  {`  http-check send uri /health
`, 2},
  {`  http-check send ver \"HTTP/1.1\"
`, 2},
  {`  http-check send comment testcomment
`, 2},
  {`  http-check send meth GET uri /health ver \"HTTP/1.1\" hdr Host example.com hdr Accept-Encoding gzip body '{\"key\":\"value\"}'
`, 2},
  {`  http-check send uri-lf my-log-format body-lf 'my-log-format'
`, 2},
  {`  http-check send-state
`, 2},
  {`  tcp-request content accept
`, 2},
  {`  tcp-request content accept if !HTTP
`, 2},
  {`  tcp-request content reject
`, 2},
  {`  tcp-request content reject if !HTTP
`, 2},
  {`  tcp-request content capture req.payload(0,6) len 6
`, 2},
  {`  tcp-request content capture req.payload(0,6) len 6 if !HTTP
`, 2},
  {`  tcp-request content set-priority-class int(1)
`, 2},
  {`  tcp-request content set-priority-class int(1) if some_check
`, 2},
  {`  tcp-request content set-priority-offset int(10)
`, 2},
  {`  tcp-request content set-priority-offset int(10) if some_check
`, 2},
  {`  tcp-request content track-sc0 src
`, 2},
  {`  tcp-request content track-sc0 src if some_check
`, 2},
  {`  tcp-request content track-sc1 src
`, 2},
  {`  tcp-request content track-sc1 src if some_check
`, 2},
  {`  tcp-request content track-sc2 src
`, 2},
  {`  tcp-request content track-sc2 src if some_check
`, 2},
  {`  tcp-request content track-sc0 src table foo
`, 2},
  {`  tcp-request content track-sc0 src table foo if some_check
`, 2},
  {`  tcp-request content track-sc1 src table foo
`, 2},
  {`  tcp-request content track-sc1 src table foo if some_check
`, 2},
  {`  tcp-request content track-sc2 src table foo
`, 2},
  {`  tcp-request content track-sc2 src table foo if some_check
`, 2},
  {`  tcp-request content set-dst ipv4(10.0.0.1)
`, 2},
  {`  tcp-request content set-var(sess.src) src
`, 2},
  {`  tcp-request content set-var(sess.dn) ssl_c_s_dn
`, 2},
  {`  tcp-request content unset-var(sess.src)
`, 2},
  {`  tcp-request content unset-var(sess.dn)
`, 2},
  {`  tcp-request content silent-drop
`, 2},
  {`  tcp-request content silent-drop if !HTTP
`, 2},
  {`  tcp-request content send-spoe-group engine group
`, 2},
  {`  tcp-request content use-service lua.deny
`, 2},
  {`  tcp-request content use-service lua.deny if !HTTP
`, 2},
  {`  tcp-request content lua.foo
`, 2},
  {`  tcp-request content lua.foo param if !HTTP
`, 2},
  {`  tcp-request content lua.foo param param1
`, 2},
  {`  tcp-request connection accept
`, 2},
  {`  tcp-request connection accept if !HTTP
`, 2},
  {`  tcp-request connection reject
`, 2},
  {`  tcp-request connection reject if !HTTP
`, 2},
  {`  tcp-request connection expect-proxy layer4 if { src -f proxies.lst }
`, 2},
  {`  tcp-request connection expect-netscaler-cip layer4
`, 2},
  {`  tcp-request connection capture req.payload(0,6) len 6
`, 2},
  {`  tcp-request connection track-sc0 src
`, 2},
  {`  tcp-request connection track-sc0 src if some_check
`, 2},
  {`  tcp-request connection track-sc1 src
`, 2},
  {`  tcp-request connection track-sc1 src if some_check
`, 2},
  {`  tcp-request connection track-sc2 src
`, 2},
  {`  tcp-request connection track-sc2 src if some_check
`, 2},
  {`  tcp-request connection track-sc0 src table foo
`, 2},
  {`  tcp-request connection track-sc0 src table foo if some_check
`, 2},
  {`  tcp-request connection track-sc1 src table foo
`, 2},
  {`  tcp-request connection track-sc1 src table foo if some_check
`, 2},
  {`  tcp-request connection track-sc2 src table foo
`, 2},
  {`  tcp-request connection track-sc2 src table foo if some_check
`, 2},
  {`  tcp-request connection sc-inc-gpc0(2)
`, 2},
  {`  tcp-request connection sc-inc-gpc0(2) if is-error
`, 2},
  {`  tcp-request connection sc-inc-gpc1(2)
`, 2},
  {`  tcp-request connection sc-inc-gpc1(2) if is-error
`, 2},
  {`  tcp-request connection sc-set-gpt0(0) 1337
`, 2},
  {`  tcp-request connection sc-set-gpt0(0) 1337 if exceeds_limit
`, 2},
  {`  tcp-request connection set-src src,ipmask(24)
`, 2},
  {`  tcp-request connection set-src src,ipmask(24) if some_check
`, 2},
  {`  tcp-request connection set-src hdr(x-forwarded-for)
`, 2},
  {`  tcp-request connection set-src hdr(x-forwarded-for) if some_check
`, 2},
  {`  tcp-request connection lua.foo
`, 2},
  {`  tcp-request connection lua.foo param if !HTTP
`, 2},
  {`  tcp-request connection lua.foo param param1
`, 2},
  {`  tcp-request session accept
`, 2},
  {`  tcp-request session accept if !HTTP
`, 2},
  {`  tcp-request session reject
`, 2},
  {`  tcp-request session reject if !HTTP
`, 2},
  {`  tcp-request session track-sc0 src
`, 2},
  {`  tcp-request session track-sc0 src if some_check
`, 2},
  {`  tcp-request session track-sc1 src
`, 2},
  {`  tcp-request session track-sc1 src if some_check
`, 2},
  {`  tcp-request session track-sc2 src
`, 2},
  {`  tcp-request session track-sc2 src if some_check
`, 2},
  {`  tcp-request session track-sc0 src table foo
`, 2},
  {`  tcp-request session track-sc0 src table foo if some_check
`, 2},
  {`  tcp-request session track-sc1 src table foo
`, 2},
  {`  tcp-request session track-sc1 src table foo if some_check
`, 2},
  {`  tcp-request session track-sc2 src table foo
`, 2},
  {`  tcp-request session track-sc2 src table foo if some_check
`, 2},
  {`  tcp-request session sc-inc-gpc0(2)
`, 2},
  {`  tcp-request session sc-inc-gpc0(2) if is-error
`, 2},
  {`  tcp-request session sc-inc-gpc1(2)
`, 2},
  {`  tcp-request session sc-inc-gpc1(2) if is-error
`, 2},
  {`  tcp-request session sc-set-gpt0(0) 1337
`, 2},
  {`  tcp-request session sc-set-gpt0(0) 1337 if exceeds_limit
`, 2},
  {`  tcp-request session set-var(sess.src) src
`, 2},
  {`  tcp-request session set-var(sess.dn) ssl_c_s_dn
`, 2},
  {`  tcp-request session unset-var(sess.src)
`, 2},
  {`  tcp-request session unset-var(sess.dn)
`, 2},
  {`  tcp-request session silent-drop
`, 2},
  {`  tcp-request session silent-drop if !HTTP
`, 2},
  {`  tcp-response content lua.foo
`, 2},
  {`  tcp-response content lua.foo param if !HTTP
`, 2},
  {`  tcp-response content lua.foo param param1
`, 2},
  {`  redirect prefix http://www.bar.com code 301 if { hdr(host) -i foo.com }
`, 2},
  {`  stats admin if LOCALHOST
`, 3},
  {`  stats auth admin1:AdMiN123
`, 3},
  {`  stats enable
`, 3},
  {`  stats hide-version
`, 3},
  {`  stats show-legends
`, 3},
  {`  stats maxconn 10
`, 3},
  {`  stats realm HAProxy\\ Statistics
`, 3},
  {`  stats refresh 10s
`, 3},
  {`  stats scope .
`, 3},
  {`  stats show-desc Master node for Europe, Asia, Africa
`, 3},
  {`  stats show-node
`, 3},
  {`  stats show-node Europe-1
`, 3},
  {`  stats uri /admin?stats
`, 3},
  {`  stats bind-process all
`, 3},
  {`  stats bind-process odd
`, 3},
  {`  stats bind-process even
`, 3},
  {`  stats bind-process 1 2 3 4
`, 3},
  {`  stats bind-process 1-4
`, 3},
  {`  stats http-request realm HAProxy\\ Statistics
`, 3},
  {`  stats http-request realm HAProxy\\ Statistics if something
`, 3},
  {`  stats http-request auth if something
`, 3},
  {`  stats http-request deny unless something
`, 3},
  {`  stats http-request allow
`, 3},
}
