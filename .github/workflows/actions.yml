name: CI
on: [push, pull_request]
jobs:
  check:
    if: ${{ github.event_name == 'pull_request' }}
    name: HAProxy check commit message
    runs-on: ubuntu-latest
    steps:
      - name: commit-check
        uses: docker://ghcr.io/haproxytech/commit-check:3.0.0
        env:
          API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  generate:
    name: checking generated files
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Generating the files
        run: |
          go run generate/go-generate.go $(pwd)
          test -z "$(git diff 2> /dev/null)" || exit 'Files are not generated, issue `go run generate/go-generate.go $(pwd)` and commit the result'
          test -z "$(git ls-files --others --exclude-standard 2> /dev/null)" || exit 'Generation created untracked files, cannot proceed'
  lint:
    name: golangci-lint
    needs: ["generate"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: docker://ghcr.io/haproxytech/go-linter:1.33
  tidy:
    name: go mod tidy
    needs: ["generate"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: tidy
        run: go mod tidy
      - name: changes
        run: test -z "$(git diff 2> /dev/null)" || exit "Go modules not tidied, issue \`go mod tidy\` and commit the result"
  go_build_test:
    name: test
    needs: ["lint","tidy"]
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.17
      uses: actions/setup-go@v1
      with:
        go-version: 1.17
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
    - name: Build
      run: |
        go build -v .
    - name: Test
      run: |
        go test ./...
